"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/vehicleImage.ts":
/*!*********************************!*\
  !*** ./src/lib/vehicleImage.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   candidateImages: function() { return /* binding */ candidateImages; },\n/* harmony export */   candidateSources: function() { return /* binding */ candidateSources; },\n/* harmony export */   getVehicleImageAlt: function() { return /* binding */ getVehicleImageAlt; },\n/* harmony export */   getVehicleImages: function() { return /* binding */ getVehicleImages; },\n/* harmony export */   getVehiclePrimaryImage: function() { return /* binding */ getVehiclePrimaryImage; },\n/* harmony export */   inferBrandModelFromTitle: function() { return /* binding */ inferBrandModelFromTitle; },\n/* harmony export */   slugifyForImage: function() { return /* binding */ slugifyForImage; }\n/* harmony export */ });\nconst BRAND_FIX = new Map([\n    [\n        \"toyota\",\n        \"Toyota\"\n    ],\n    [\n        \"honda\",\n        \"Honda\"\n    ],\n    [\n        \"nissan\",\n        \"Nissan\"\n    ]\n]);\nfunction normalize() {\n    let s = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\";\n    return s.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\") // quita tildes\n    .toLowerCase();\n}\nfunction slugifyForImage(s) {\n    return s.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\") // sin acentos\n    .trim().replace(/\\s+/g, \"_\") // espacios -> _\n    .replace(/[^A-Za-z0-9_]/g, \"\"); // seguro\n}\nfunction candidateImages(make, model, image) {\n    const m = make ? slugifyForImage(make) : \"\";\n    const d = model ? slugifyForImage(model) : \"\";\n    const base = m && d ? \"/\".concat(m, \"_\").concat(d) : \"\";\n    const exts = [\n        \"png\",\n        \"jpg\",\n        \"jpeg\",\n        \"webp\"\n    ];\n    const lateral = exts.map((e)=>\"\".concat(base, \"_lateral.\").concat(e));\n    const frontal = exts.map((e)=>\"\".concat(base, \"_frontal.\").concat(e));\n    return [\n        image || \"\",\n        ...lateral,\n        ...frontal,\n        \"/placeholder-car.jpg\"\n    ].filter(Boolean);\n}\nfunction inferBrandModelFromTitle() {\n    let title = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\";\n    const t = normalize(title);\n    // modelos que quieres reconocer (fácil de extender)\n    const models = [\n        \"corolla\",\n        \"civic\",\n        \"sentra\",\n        \"yaris\",\n        \"hilux\",\n        \"crv\",\n        \"accord\"\n    ];\n    const brands = Array.from(BRAND_FIX.keys());\n    const brand = brands.find((b)=>t.includes(b)) || \"\";\n    const model = models.find((m)=>t.includes(m)) || \"\";\n    return {\n        brand: BRAND_FIX.get(brand) || \"\",\n        model: model ? model === \"crv\" ? \"CRV\" : model[0].toUpperCase() + model.slice(1) : \"\"\n    };\n}\n/**\n * Devuelve una lista de candidatos en orden de prueba.\n * 1) vehicle.image (si viene)\n * 2) /<Brand>_<Model>_lateral.(png|jpg|jpeg|webp)\n * 3) /placeholder-car.jpg\n */ function candidateSources(v) {\n    const candidates = [];\n    if (v.image) candidates.push(v.image);\n    const { brand, model } = inferBrandModelFromTitle(v.title || \"\");\n    if (brand && model) {\n        const base = \"/\".concat(brand, \"_\").concat(model, \"_lateral\");\n        for (const ext of [\n            \".png\",\n            \".jpg\",\n            \".jpeg\",\n            \".webp\"\n        ]){\n            candidates.push(\"\".concat(base).concat(ext));\n        }\n    }\n    candidates.push(\"/placeholder-car.jpg\");\n    return Array.from(new Set(candidates)) // sin duplicados\n    ;\n}\n/**\n * Obtiene la imagen principal de un vehículo de forma segura\n * Prioridad:\n * 1) vehicle.image (si existe y no es null)\n * 2) Primera imagen de vehicle.images con isPrimary=true\n * 3) Primera imagen de vehicle.images\n * 4) Placeholder por defecto\n */ function getVehiclePrimaryImage(vehicle) {\n    let fallback = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"/placeholder-car.webp\";\n    // 0) Priorizar siempre la imagen lateral si existe en el array de imágenes\n    if (vehicle.images && Array.isArray(vehicle.images) && vehicle.images.length > 0) {\n        const lateralFromList = vehicle.images.find((img)=>{\n            const url = (img.url || \"\").toLowerCase();\n            const alt = (img.alt || \"\").toLowerCase();\n            return url.includes(\"_lateral.\") || alt.includes(\"lateral\");\n        });\n        if (lateralFromList && lateralFromList.url) {\n            return lateralFromList.url;\n        }\n    }\n    // 1) Usar vehicle.image solo si es lateral\n    if (vehicle.image && vehicle.image.trim() !== \"\") {\n        const imgLower = vehicle.image.toLowerCase();\n        if (imgLower.includes(\"_lateral.\")) {\n            return vehicle.image;\n        }\n    }\n    // 2) Si hay imágenes, usar marcada como primary; luego primera\n    if (vehicle.images && Array.isArray(vehicle.images) && vehicle.images.length > 0) {\n        const primaryImage = vehicle.images.find((img)=>img.isPrimary && img.url);\n        if (primaryImage && primaryImage.url) {\n            return primaryImage.url;\n        }\n        const firstImage = vehicle.images[0];\n        if (firstImage && firstImage.url) {\n            return firstImage.url;\n        }\n    }\n    // 3) Fallback al placeholder\n    return fallback;\n}\n/**\n * Obtiene todas las imágenes de un vehículo de forma segura\n * Retorna un array vacío si no hay imágenes\n */ function getVehicleImages(vehicle) {\n    if (vehicle.images && Array.isArray(vehicle.images)) {\n        return vehicle.images;\n    }\n    return [];\n}\n/**\n * Obtiene el alt text para una imagen de vehículo\n */ function getVehicleImageAlt(vehicle, imageAlt) {\n    const vehicleTitle = \"\".concat(vehicle.brand || \"Veh\\xedculo\", \" \").concat(vehicle.model || \"\", \" \").concat(vehicle.year || \"\").trim();\n    if (imageAlt && imageAlt.trim() !== \"\") {\n        return \"\".concat(vehicleTitle, \" - \").concat(imageAlt);\n    }\n    return \"\".concat(vehicleTitle, \" - TLoVendo\");\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/vehicleImage.ts\n"));

/***/ })

});